version: '2'

services:
  blog_app:
    extends:
      file: docker-compose.common.yml
      service: blog_app
    env_file:
      # You need to have this file to be able to work with docker
      - ~/.docker/secrets/blog.prod.env
    volumes_from:
      - blog_app_data
    links:
      - blog_postgres:postgres
    depends_on:
      - blog_postgres
      - blog_app_data


  # Runs migrations for the app. Production only, at the moment.
  blog_app_update:
    extends:
      file: docker-compose.common.yml
      service: blog_app
    # Restart until postgres can process our requests.
    # Should help on the first run and on restarts
    restart: on-failure:10
    command: "bash scripts/update-script.sh"
    env_file:
      # You need to have this file to be able to work with docker
      - ~/.docker/secrets/blog.prod.env
    volumes_from:
      - blog_app_data
    links:
      - blog_postgres:postgres
    depends_on:
      - blog_postgres
      - blog_app_data


  blog_app_frontend:
    extends:
      file: docker-compose.common.yml
      service: blog_app_frontend
    volumes_from:
      - blog_app_data
    depends_on:
      - blog_app
      - blog_app_data


  blog_app_data:
    extends:
      file: docker-compose.common.yml
      service: blog_app_data


  # Nginx. Serves static and media files from the application's data container.
  # Note: allows to run only this app. Production only, at the moment.
  blog_nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes_from:
      - blog_app_data
    links:
      - blog_app
    depends_on:
      - blog_app_data


  blog_postgres:
    extends:
      file: docker-compose.common.yml
      service: blog_postgres
    volumes_from:
      - blog_postgres_data
    depends_on:
      - blog_postgres_data


  blog_postgres_data:
    extends:
      file: docker-compose.common.yml
      service: blog_postgres_data
