version: '2'

services:
  # App.
  blog:
    build: .
    links:
      - postgres:postgres
    depends_on:
      - postgres
      - blog_data
    volumes_from:
      - blog_data
    env_file:
      - ./blog.env
      # You need to have this file to be able to work with docker
      - ~/.docker/secrets/blog.env

  # Runs migrations for the application.
  blog_update:
    build: .
    links:
      - postgres:postgres
    depends_on:
      - postgres
      - blog_data
    volumes_from:
      - blog_data
    env_file:
      - ./blog.env
      # You need to have this file to be able to work with docker
      - ~/.docker/secrets/blog.env
    # Restart until postgres can process our requests.
    # Should help on the first run and on restarts.
    restart: on-failure:10
    command: "bash scripts/update-script.sh"

  # Builds front-end for the app.
  blog_frontend_build:
    build:
      context: .
      dockerfile: Dockerfile-frontend_build
    depends_on:
      - blog
      - blog_data
    volumes_from:
      - blog_data
    env_file:
      - ./blog.env

  # For static and media files
  blog_data:
    image: python:3.5-slim
    volumes:
      - /var/blog
    command: "true"

  # Nginx. Serves static and media files from `blog_data` and app from `blog`
  # Note: allows to run only this app.
  nginx:
    build: ./nginx
    links:
      - blog
    volumes_from:
      - blog_data
    depends_on:
      - blog_data
    ports:
      - "80:80"

  # Postgres. Saves data in `postgres_data`'s volume.
  postgres:
    image: postgres:9.5
    volumes_from:
      - postgres_data
    depends_on:
      - postgres_data

  postgres_data:
    image: postgres:9.5
    volumes:
      - /var/lib/postgresql
    command: "true"